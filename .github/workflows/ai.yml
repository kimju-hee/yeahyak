name: deploy-ai (deploy)

on:
  push:
    branches: [ dev ]          # ✅ dev에서만 동작하도록 변경
    paths:
      - 'ai/**'
      - '.github/workflows/ai.yml'
  workflow_dispatch:

env:
  IMAGE: ${{ secrets.ACR_LOGIN_SERVER }}/yeahyak-ai:deploy

concurrency:
  group: ai-deploy-deploy
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Login ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # ✅ ACR에 :deploy 태그로 이미지 빌드 & 푸시
      - name: Build & Push image (deploy)
        run: |
          set -e
          docker build -t "$IMAGE" -f ai/Dockerfile ai
          docker push "$IMAGE"

      # ✅ VM에 배포 (항상 새 이미지로 교체)
      - name: Deploy on VM (SSH)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            IMAGE="${{ secrets.ACR_LOGIN_SERVER }}/yeahyak-ai:deploy"
            echo "Using IMAGE=${IMAGE}"

            docker login "${{ secrets.ACR_LOGIN_SERVER }}" \
              -u "${{ secrets.ACR_USERNAME }}" -p "${{ secrets.ACR_PASSWORD }}"

            docker pull "$IMAGE" || true
            docker rm -f yeahyak-ai 2>/dev/null || true

            docker run -d --name yeahyak-ai \
              -p 127.0.0.1:8082:8080 \
              --restart unless-stopped \
              --env-file /opt/yeahyak/ai.env \
              "$IMAGE"
