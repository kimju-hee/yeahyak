name: deploy-frontend (deploy)

on:
  push:
    branches: [dev]               # ✅ dev에 push/merge되면 자동 실행
    paths:
      - 'frontend/**'                # ✅ 프런트 변경 있을 때만
      - '.github/workflows/frontend.yml'
  # workflow_dispatch:               # 필요 시 수동 실행 복구

env:
  IMAGE: ${{ secrets.ACR_LOGIN_SERVER }}/yeahyak-frontend:deploy

concurrency:
  group: frontend-deploy-deploy
  cancel-in-progress: true

# ...위 내용 동일...

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Login ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Setup Node for typecheck
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps (typecheck)
        working-directory: frontend
        run: npm ci

      - name: TypeScript typecheck (soft)
        working-directory: frontend
        run: npm run typecheck
        continue-on-error: true

      # ✅ 추가: Vite 빌드용 .env.production을 CI에서만 생성
      - name: Create .env.production for Vite (CI-only)
        working-directory: frontend
        run: |
          cat > .env.production << 'EOF'
          VITE_API_BASE_URL=${{ secrets.API_BASE_URL }}
          VITE_AI_API_BASE_URL=${{ secrets.AI_API_BASE_URL }}
          EOF
          echo "Created frontend/.env.production"

      - name: Build & Push image (deploy)
        run: |
          set -e
          docker build -t "$IMAGE" -f frontend/Dockerfile frontend
          docker push "$IMAGE"

      - name: Deploy to VM (frontend only)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script_stop: true
          script: |
            set -e
            cd /opt/yeahyak
            docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}
            sed -i -E "s#${{ secrets.ACR_LOGIN_SERVER }}/yeahyak-frontend:[^[:space:]]+#${{ secrets.ACR_LOGIN_SERVER }}/yeahyak-frontend:deploy#g" docker-compose.yml
            docker compose pull frontend || true
            docker compose rm -sf frontend || true
            docker compose up -d --no-deps --force-recreate frontend
            docker image prune -f
